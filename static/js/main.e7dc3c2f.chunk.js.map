{"version":3,"sources":["assets/Doumont_Resume.pdf","redux/screen/screen.types.js","redux/screen/screen.reducer.js","redux/dropdown-menu/dropdown-menu.types.js","redux/dropdown-menu/dropdown-menu.reducer.js","redux/editor-options/editor-options.types.js","redux/editor-options/editor-options.reducer.js","redux/files/files.types.js","redux/files/files.reducer.js","redux/root.reducer.js","redux/store.js","components/editor/editor.component.jsx","redux/files/files.actions.js","components/viewer/viewer.component.jsx","components/folder/folder.component.jsx","components/folder-container/folder-container.component.jsx","redux/dropdown-menu/dropdown-menu.actions.js","components/editor-viewer-container/editor-viewer-container.component.jsx","components/editor-options-menu/editor-options-menu.component.jsx","redux/editor-options/editor-options.actions.js","components/files-menu/files-menu.component.jsx","redux/screen/screen.actions.js","components/header/header.component.jsx","App.js","index.js"],"names":["module","exports","screenActionTypes","INITIAL_STATE","windowHeight","window","innerHeight","windowWidth","innerWidth","editorViewerToggle","foldersToggle","dropdownMenuChange","CHANGE_DROPDOWNS","dropdownMenuDropped","dropdownMenuClicked","DROPDOWNS_CLOSED","editorOptionsActionTypes","language","theme","font","fontLigatures","TextActionTypes","defaultFolders","Folder1","File1","File2","File3","Folder2","userFolders","currentFolder","currentFile","code","rootReducer","combineReducers","screen","state","action","type","payload","dropdownMenu","editorOptions","folders","folder","file","middleWares","logger","store","createStore","applyMiddleware","Editor","onChange","newValue","e","props","updateText","editor","monaco","options","selectOnLineNumbers","fontSize","this","fontFamily","wordWrap","parameterHints","cycle","renderIndentGuides","width","height","langauge","value","editorDidMount","React","Component","connect","dispatch","Viewer","id","title","src","PdfFile","switchCurrentFile","folderName","folderFiles","useState","fileToggle","setFileToggle","className","style","borderBottom","onClick","Object","keys","map","key","changeDropdowns","dropdown","closeDropdownsOnClick","dynamicWidth","changeLangauge","changeFont","changeTheme","toggleLigatures","initialOptions","Language","setOptionItems","langaugeOptions","Theme","themeOptions","Font","fontOptions","Latex","JavaScript","Python","vs","VT323","optionItems","item","toggleFolders","saveTextToFile","Save","Folders","Profile","toggleEditorViewer","component","onMouseOver","handleResize","useEffect","addEventListener","removeEventListener","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7dc3c2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Doumont_Resume.95cb8f82.pdf\";","export const screenActionTypes = {\r\n  HANDLE_RESIZE: \"HANDLE_RESIZE\",\r\n  TOGGLE_EDITOR_VIEWER: \"TOGGLE_EDITOR_VIEWER\",\r\n  TOGGLE_FOLDERS: \"TOGGLE_FOLDERS\"\r\n};\r\n","import { screenActionTypes } from \"./screen.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  windowHeight: window.innerHeight,\r\n  windowWidth: window.innerWidth,\r\n  editorViewerToggle: \"both\",\r\n  foldersToggle: false\r\n};\r\n\r\nexport const screenReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case screenActionTypes.HANDLE_RESIZE:\r\n      return {\r\n        ...state,\r\n        windowHeight: window.innerHeight,\r\n        windowWidth: window.innerWidth\r\n      };\r\n    case screenActionTypes.TOGGLE_EDITOR_VIEWER:\r\n      if (state.editorViewerToggle === action.payload) {\r\n        return {\r\n          ...state,\r\n          editorViewerToggle: \"both\"\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        editorViewerToggle: action.payload\r\n      };\r\n    case screenActionTypes.TOGGLE_FOLDERS:\r\n      return {\r\n        ...state,\r\n        foldersToggle: !state.foldersToggle\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const dropdownMenuChange = {\r\n  CHANGE_DROPDOWNS: \"CHANGE_DROPDOWNS\"\r\n};\r\n\r\nexport const dropdownMenuDropped = {\r\n  FILES_OPEN: \"FILES_OPEN\",\r\n  EDITOR_OPTIONS_OPEN: \"EDITOR_OPTIONS_OPEN\",\r\n  DROPDOWNS_CLOSED: \"DROPDOWNS_CLOSED\"\r\n};\r\n","import { dropdownMenuChange, dropdownMenuDropped } from \"./dropdown-menu.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  dropdownMenuClicked: dropdownMenuChange.DROPDOWNS_CLOSED\r\n};\r\n\r\nexport const dropdownMenuReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case dropdownMenuChange.CHANGE_DROPDOWNS:\r\n      if (action.payload === state.dropdownMenuClicked) {\r\n        return {\r\n          ...state,\r\n          dropdownMenuClicked: dropdownMenuDropped.DROPDOWNS_CLOSED\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          dropdownMenuClicked: action.payload\r\n        };\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const editorOptionsActionTypes = {\r\n  CHANGE_LANGUAGE: \"CHANGE_LANGAUGE\",\r\n  CHANGE_THEME: \"CHANGE_THEME\",\r\n  CHANGE_FONT: \"CHANGE_FONT\",\r\n  TOGGLE_LIGATURES: \"TOGGLE_LIGATURES\"\r\n};\r\n","/**\r\n * fonts\r\n * \r\n  'Fira Code'\r\n  'Ubuntu Mono'\r\n  'VT323'\r\n  'Nova Mono'\r\n */\r\nimport { editorOptionsActionTypes } from \"./editor-options.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  language: \"python\",\r\n  theme: \"vs-dark\",\r\n  font: \"Fira Code\",\r\n  fontLigatures: true\r\n};\r\n\r\nexport const editorOptionsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case editorOptionsActionTypes.CHANGE_LANGUAGE:\r\n      return {\r\n        ...state,\r\n        language: action.payload\r\n      };\r\n    case editorOptionsActionTypes.CHANGE_THEME:\r\n      return {\r\n        ...state,\r\n        theme: action.payload\r\n      };\r\n    case editorOptionsActionTypes.CHANGE_FONT:\r\n      return {\r\n        ...state,\r\n        font: action.payload\r\n      };\r\n    case editorOptionsActionTypes.TOGGLE_LIGATURES:\r\n      return {\r\n        ...state,\r\n        fontLigatures: !state.fontLigatures\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const TextActionTypes = {\r\n  CHANGE_TEXT: \"CHANGE_TEXT\",\r\n  SAVE_TEXT_TO_FILE: \"SAVE_TEXT_TO_FILE\",\r\n  SWITCH_CURRENT_FILE: \"SWITCH_CURRENT_FILE\"\r\n};\r\n","import { TextActionTypes } from \"./files.types\";\r\n\r\nconst defaultFolders = {\r\n  Folder1: {\r\n    File1:\r\n      'import React from \"react\";\\r\\nimport { connect } from \"react-redux\";\\r\\nimport { toggleFolders } from \"../../redux/screen/screen.actions\";\\r\\nimport \"./files-menu.styles.scss\";\\r\\n\\r\\nconst FilesMenu = ({ toggleFolders }) => {\\r\\n  const initialOptions = {\\r\\n    Save: () => {},\\r\\n    Folders: toggleFolders,\\r\\n    Profile: () => {},\\r\\n    \"Other Options\": () => {}\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div className=\"files-menu\">\\r\\n      <div className=\"files-items\">\\r\\n        {Object.keys(initialOptions).map(item => (\\r\\n          <div key={item} className=\"files-item\" onClick={initialOptions[item]}>\\r\\n            {item}\\r\\n          </div>\\r\\n        ))}\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nconst mapDispatchToProps = dispatch => ({\\r\\n  toggleFolders: () => dispatch(toggleFolders())\\r\\n});\\r\\n\\r\\nexport default connect(\\r\\n  null,\\r\\n  mapDispatchToProps\\r\\n)(FilesMenu);\\r\\n',\r\n    File2: \"\",\r\n    File3: \"\"\r\n  },\r\n  Folder2: { File1: \"\", File2: \"\", File3: \"\" }\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  userFolders: defaultFolders,\r\n  currentFolder: \"Folder1\",\r\n  currentFile: \"File1\",\r\n  code: defaultFolders.Folder1.File1\r\n};\r\n\r\nexport const folderReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case TextActionTypes.CHANGE_TEXT:\r\n      return {\r\n        ...state,\r\n        code: action.payload\r\n      };\r\n    case TextActionTypes.SAVE_TEXT_TO_FILE:\r\n      return {\r\n        ...state,\r\n        userFolders: {\r\n          ...state.userFolders,\r\n          [state.currentFolder]: {\r\n            ...state.userFolders[state.currentFolder],\r\n            [state.currentFile]: state.code\r\n          }\r\n        }\r\n      };\r\n    case TextActionTypes.SWITCH_CURRENT_FILE:\r\n      return {\r\n        ...state,\r\n        currentFolder: action.payload.folder,\r\n        currentFile: action.payload.file,\r\n        code: state.userFolders[action.payload.folder][action.payload.file]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { screenReducer } from \"./screen/screen.reducer\";\r\nimport { dropdownMenuReducer } from \"./dropdown-menu/dropdown-menu.reducer\";\r\nimport { editorOptionsReducer } from \"./editor-options/editor-options.reducer\";\r\nimport { folderReducer } from \"./files/files.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  screen: screenReducer,\r\n  dropdownMenu: dropdownMenuReducer,\r\n  editorOptions: editorOptionsReducer,\r\n  folders: folderReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./root.reducer\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst middleWares = [logger];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middleWares));\r\n","import React from \"react\";\r\nimport MonacoEditor from \"react-monaco-editor\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateText } from \"../../redux/files/files.actions\";\r\n\r\nclass Editor extends React.Component {\r\n  editorDidMount(editor, monaco) {\r\n    /**\r\n     * Change monaco editor options here!!!!!!\r\n     */\r\n  }\r\n\r\n  onChange = (newValue, e) => {\r\n    this.props.updateText(newValue);\r\n  };\r\n  render() {\r\n    const options = {\r\n      selectOnLineNumbers: true,\r\n      fontSize: 15,\r\n      fontLigatures: this.props.editorOptions.fontLigatures,\r\n      fontFamily: this.props.editorOptions.font,\r\n      wordWrap: \"on\",\r\n      parameterHints: {\r\n        cycle: \"true\"\r\n      },\r\n      renderIndentGuides: false\r\n    };\r\n    return (\r\n      <MonacoEditor\r\n        width={this.props.width}\r\n        height={this.props.height}\r\n        language={this.props.editorOptions.langauge}\r\n        theme={this.props.editorOptions.theme}\r\n        value={this.props.code}\r\n        options={options}\r\n        onChange={this.onChange}\r\n        editorDidMount={this.editorDidMount}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  code: state.folders.code,\r\n  editorOptions: state.editorOptions\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateText: code => dispatch(updateText(code))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Editor);\r\n","import { TextActionTypes } from \"./files.types\";\r\n\r\nexport const updateText = code => ({\r\n  type: TextActionTypes.CHANGE_TEXT,\r\n  payload: code\r\n});\r\n\r\nexport const saveTextToFile = (folder, file) => ({\r\n  type: TextActionTypes.SAVE_TEXT_TO_FILE,\r\n  payload: {\r\n    folder,\r\n    file\r\n  }\r\n});\r\n\r\nexport const switchCurrentFile = (folder, file) => ({\r\n  type: TextActionTypes.SWITCH_CURRENT_FILE,\r\n  payload: {\r\n    folder,\r\n    file\r\n  }\r\n});\r\n","import React from \"react\";\r\nimport PdfFile from \"../../assets/Doumont_Resume.pdf\";\r\n\r\nconst Viewer = ({ width, height }) => (\r\n  <iframe id=\"PDF\" title=\"PDF\" width={width} height={height} src={PdfFile} />\r\n);\r\n\r\nexport default Viewer;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { switchCurrentFile } from \"../../redux/files/files.actions\";\r\n\r\nimport \"./folder.styles.scss\";\r\n\r\nconst Folder = ({ folderName, folderFiles, switchCurrentFile }) => {\r\n  const [fileToggle, setFileToggle] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className=\"folder\"\r\n      style={{ borderBottom: fileToggle ? \"none\" : \"1px solid #080808\" }}\r\n    >\r\n      <div className=\"folder-title\" onClick={() => setFileToggle(!fileToggle)}>\r\n        {folderName}\r\n      </div>\r\n      {fileToggle\r\n        ? Object.keys(folderFiles).map(file => (\r\n            <div\r\n              key={file}\r\n              className=\"file\"\r\n              onClick={() => switchCurrentFile(folderName, file)}\r\n            >\r\n              {file}\r\n            </div>\r\n          ))\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispathcToProps = dispatch => ({\r\n  switchCurrentFile: (folder, file) => dispatch(switchCurrentFile(folder, file))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispathcToProps\r\n)(Folder);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./folder-container.styles.scss\";\r\n\r\nimport Folder from \"../folder/folder.component\";\r\n\r\nconst FolderContainer = ({ height, width, userFolders }) => {\r\n  return (\r\n    <div\r\n      className=\"folder-container\"\r\n      style={{ height: `${height}px`, width: `${width}px` }}\r\n    >\r\n      {Object.keys(userFolders).map(folder => (\r\n        <Folder\r\n          key={folder}\r\n          folderName={folder}\r\n          folderFiles={userFolders[folder]}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userFolders: state.folders.userFolders\r\n});\r\n\r\nexport default connect(mapStateToProps)(FolderContainer);\r\n","import { dropdownMenuChange } from \"./dropdown-menu.types\";\r\n\r\nexport const changeDropdowns = dropdown => ({\r\n  type: dropdownMenuChange.CHANGE_DROPDOWNS,\r\n  payload: dropdown\r\n});\r\n","import React from \"react\";\r\nimport Editor from \"../editor/editor.component\";\r\nimport Viewer from \"../viewer/viewer.component\";\r\nimport FolderContainer from \"../folder-container/folder-container.component\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeDropdowns } from \"../../redux/dropdown-menu/dropdown-menu.actions\";\r\nimport { dropdownMenuDropped } from \"../../redux/dropdown-menu/dropdown-menu.types\";\r\nimport \"./editor-viewer-container.styles.scss\";\r\n\r\nconst EditorViewerContainer = ({\r\n  width,\r\n  height,\r\n  dropdownMenuClicked,\r\n  closeDropdownsOnClick,\r\n  editorViewerToggle,\r\n  foldersToggle\r\n}) => {\r\n  let dynamicWidth = foldersToggle ? width - 200 : width;\r\n\r\n  return (\r\n    <div\r\n      className=\"editor-viewer-container\"\r\n      style={{ height: `${height - 73}` }}\r\n      onClick={() => {\r\n        if (dropdownMenuClicked !== dropdownMenuDropped.DROPDOWNS_CLOSED) {\r\n          closeDropdownsOnClick();\r\n        }\r\n      }}\r\n    >\r\n      {foldersToggle ? (\r\n        <FolderContainer width={200} height={height - 74} />\r\n      ) : null}\r\n      {editorViewerToggle === \"both\" ? (\r\n        <Editor width={dynamicWidth / 2} height={height - 73} />\r\n      ) : editorViewerToggle === \"viewer\" ? (\r\n        <Editor width={dynamicWidth} height={height - 73} />\r\n      ) : null}\r\n      {editorViewerToggle === \"both\" ? (\r\n        <Viewer width={dynamicWidth / 2} height={height - 76} />\r\n      ) : editorViewerToggle === \"editor\" ? (\r\n        <Viewer width={dynamicWidth} height={height - 76} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  width: state.screen.windowWidth,\r\n  height: state.screen.windowHeight,\r\n  editorViewerToggle: state.screen.editorViewerToggle,\r\n  dropdownMenuClicked: state.dropdownMenu.dropdownMenuClicked,\r\n  foldersToggle: state.screen.foldersToggle\r\n});\r\nconst mapDipsatchToProps = dispatch => ({\r\n  closeDropdownsOnClick: () =>\r\n    dispatch(changeDropdowns(dropdownMenuDropped.DROPDOWNS_CLOSED))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDipsatchToProps\r\n)(EditorViewerContainer);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  changeLangauge,\r\n  changeTheme,\r\n  changeFont,\r\n  toggleLigatures\r\n} from \"../../redux/editor-options/editor-options.actions\";\r\nimport \"./editor-options-menu.styles.scss\";\r\n\r\nconst EditorOptionsMenu = ({\r\n  changeLangauge,\r\n  changeFont,\r\n  changeTheme,\r\n  toggleLigatures\r\n}) => {\r\n  const initialOptions = {\r\n    Language: () => {\r\n      setOptionItems(langaugeOptions);\r\n    },\r\n    Theme: () => {\r\n      setOptionItems(themeOptions);\r\n    },\r\n    Font: () => {\r\n      setOptionItems(fontOptions);\r\n    },\r\n    \"Toggle Ligatures\": () => {\r\n      toggleLigatures();\r\n    }\r\n  };\r\n  const langaugeOptions = {\r\n    Latex: () => changeLangauge(\"latex\"),\r\n    JavaScript: () => changeLangauge(\"javascript\"),\r\n    Python: () => changeLangauge(\"python\")\r\n  };\r\n  const themeOptions = {\r\n    vs: () => changeTheme(\"vs\"),\r\n    \"vs-dark\": () => changeTheme(\"vs-dark\"),\r\n    \"hc-black\": () => changeTheme(\"hc-black\")\r\n  };\r\n  const fontOptions = {\r\n    \"Fira Code\": () => changeFont(\"Fira Code\"),\r\n    \"Ubuntu Mono\": () => changeFont(\"Ubuntu Mono\"),\r\n    VT323: () => changeFont(\"VT323\"),\r\n    \"Nova Mono\": () => changeFont(\"Nova Mono\")\r\n  };\r\n\r\n  const [optionItems, setOptionItems] = useState(initialOptions);\r\n\r\n  return (\r\n    <div className=\"editor-options-menu\">\r\n      <div className=\"editor-options-items\">\r\n        {Object.keys(optionItems).map(item => (\r\n          <div\r\n            key={item}\r\n            className=\"editor-option-item\"\r\n            onClick={optionItems[item]}\r\n          >\r\n            {item}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeLangauge: langauge => dispatch(changeLangauge(langauge)),\r\n  changeFont: font => dispatch(changeFont(font)),\r\n  changeTheme: theme => dispatch(changeTheme(theme)),\r\n  toggleLigatures: () => dispatch(toggleLigatures())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(EditorOptionsMenu);\r\n","import { editorOptionsActionTypes } from \"./editor-options.types\";\r\n\r\nexport const changeLangauge = language => ({\r\n  type: editorOptionsActionTypes.CHANGE_LANGUAGE,\r\n  payload: language\r\n});\r\n\r\nexport const changeTheme = theme => ({\r\n  type: editorOptionsActionTypes.CHANGE_THEME,\r\n  payload: theme\r\n});\r\n\r\nexport const changeFont = font => ({\r\n  type: editorOptionsActionTypes.CHANGE_FONT,\r\n  payload: font\r\n});\r\n\r\nexport const toggleLigatures = () => ({\r\n  type: editorOptionsActionTypes.TOGGLE_LIGATURES\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleFolders } from \"../../redux/screen/screen.actions\";\r\nimport { saveTextToFile } from \"../../redux/files/files.actions\";\r\nimport \"./files-menu.styles.scss\";\r\n\r\nconst FilesMenu = ({ toggleFolders, saveTextToFile }) => {\r\n  const initialOptions = {\r\n    Save: saveTextToFile,\r\n    Folders: toggleFolders,\r\n    Profile: () => {},\r\n    \"Other Options\": () => {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"files-menu\">\r\n      <div className=\"files-items\">\r\n        {Object.keys(initialOptions).map(item => (\r\n          <div key={item} className=\"files-item\" onClick={initialOptions[item]}>\r\n            {item}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleFolders: () => dispatch(toggleFolders()),\r\n  saveTextToFile: () => dispatch(saveTextToFile())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(FilesMenu);\r\n","import { screenActionTypes } from \"./screen.types\";\r\n\r\nexport const handleResize = () => ({\r\n  type: screenActionTypes.HANDLE_RESIZE\r\n});\r\n\r\nexport const toggleEditorViewer = component => ({\r\n  type: screenActionTypes.TOGGLE_EDITOR_VIEWER,\r\n  payload: component\r\n});\r\n\r\nexport const toggleFolders = () => ({\r\n  type: screenActionTypes.TOGGLE_FOLDERS\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport EditorOptionsMenu from \"../editor-options-menu/editor-options-menu.component\";\r\nimport FilesMenu from \"../files-menu/files-menu.component\";\r\nimport { changeDropdowns } from \"../../redux/dropdown-menu/dropdown-menu.actions\";\r\nimport { dropdownMenuDropped } from \"../../redux/dropdown-menu/dropdown-menu.types\";\r\nimport { toggleEditorViewer } from \"../../redux/screen/screen.actions\";\r\n\r\nimport \"./header.styles.scss\";\r\n\r\nconst Header = ({\r\n  dropdownMenuClicked,\r\n  changeDropdowns,\r\n  toggleEditorViewer\r\n}) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"title\">Latex Editor</div>\r\n      <div className=\"dropper-container\">\r\n        <div\r\n          className=\"dropper\"\r\n          onClick={() => changeDropdowns(dropdownMenuDropped.FILES_OPEN)}\r\n          onMouseOver={() => {\r\n            if (\r\n              dropdownMenuClicked === dropdownMenuDropped.EDITOR_OPTIONS_OPEN\r\n            ) {\r\n              changeDropdowns(dropdownMenuDropped.FILES_OPEN);\r\n            }\r\n          }}\r\n        >\r\n          Files\r\n        </div>\r\n        {dropdownMenuClicked === dropdownMenuDropped.FILES_OPEN ? (\r\n          <FilesMenu />\r\n        ) : null}\r\n        <div\r\n          className=\"dropper\"\r\n          onClick={() =>\r\n            changeDropdowns(dropdownMenuDropped.EDITOR_OPTIONS_OPEN)\r\n          }\r\n          onMouseOver={() => {\r\n            if (dropdownMenuClicked === dropdownMenuDropped.FILES_OPEN) {\r\n              changeDropdowns(dropdownMenuDropped.EDITOR_OPTIONS_OPEN);\r\n            }\r\n          }}\r\n        >\r\n          Editor Options\r\n        </div>\r\n        {dropdownMenuClicked === dropdownMenuDropped.EDITOR_OPTIONS_OPEN ? (\r\n          <EditorOptionsMenu />\r\n        ) : null}\r\n        <div\r\n          className=\"dropper\"\r\n          onClick={() => toggleEditorViewer(\"editor\")}\r\n          onMouseOver={() => {\r\n            if (\r\n              dropdownMenuClicked === dropdownMenuDropped.EDITOR_OPTIONS_OPEN ||\r\n              dropdownMenuClicked === dropdownMenuDropped.FILES_OPEN\r\n            ) {\r\n              changeDropdowns(dropdownMenuDropped.DROPDOWNS_CLOSED);\r\n            }\r\n          }}\r\n        >\r\n          Toggle Editor\r\n        </div>\r\n        <div\r\n          className=\"dropper\"\r\n          onClick={() => toggleEditorViewer(\"viewer\")}\r\n          onMouseOver={() => {\r\n            if (\r\n              dropdownMenuClicked === dropdownMenuDropped.EDITOR_OPTIONS_OPEN ||\r\n              dropdownMenuClicked === dropdownMenuDropped.FILES_OPEN\r\n            ) {\r\n              changeDropdowns(dropdownMenuDropped.DROPDOWNS_CLOSED);\r\n            }\r\n          }}\r\n        >\r\n          Toggle Viewer\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  dropdownMenuClicked: state.dropdownMenu.dropdownMenuClicked\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeDropdowns: dropdown => dispatch(changeDropdowns(dropdown)),\r\n  toggleEditorViewer: component => dispatch(toggleEditorViewer(component))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import React, { useEffect } from \"react\";\nimport EditorViewerContainer from \"./components/editor-viewer-container/editor-viewer-container.component\";\nimport Header from \"./components/header/header.component\";\nimport { connect } from \"react-redux\";\nimport { handleResize } from \"./redux/screen/screen.actions\";\n\nimport \"./App.scss\";\n\nconst App = ({ handleResize }) => {\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  });\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <EditorViewerContainer />\n    </div>\n  );\n};\n\nconst mapDipsatchToProps = dispatch => ({\n  handleResize: () => dispatch(handleResize())\n});\n\nexport default connect(\n  null,\n  mapDipsatchToProps\n)(App);\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport App from \"./App\";\n\n/**\n * Creating a Web app to write and view Latex files.\n * TODO: Create folder structure on Front-End, should be toggled with Ctrl-b\n * TODO: Create User-Profile for Front-End\n * TODO: Add a small div sliver between the editor and viewer so that you can cahnge the sizing\n * ! Create Back end on heroku that will compile pdf and send back to Front-End\n */\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}